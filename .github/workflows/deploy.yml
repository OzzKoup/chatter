name: Deploy Chatter

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: self-hosted  # Використовує ваш локальний runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Build Docker image
        run: |
          docker build -t admin/chatter:latest .
          docker tag admin/chatter:latest admin/chatter:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          # Apply the deployment from your k8s folder
          kubectl apply -f .github/workflows/k8s/deployment.yaml
          
          # Change to Recreate strategy to avoid hanging pods
          kubectl patch deployment chatter-deployment -p '{"spec":{"strategy":{"type":"Recreate"}}}'
          
          # Scale to 0 first
          kubectl scale deployment chatter-deployment --replicas=0
          
          # Wait for all pods to terminate (minimal timeout)
          kubectl wait --for=delete pod -l app=chatter --timeout=30s || kubectl delete pod -l app=chatter --force --grace-period=0
          
          # Update image
          kubectl set image deployment/chatter-deployment chatter=admin/chatter:${{ github.sha }}
          
          # Scale back to 1
          kubectl scale deployment chatter-deployment --replicas=1
          
          # Wait for new pod to be ready (minimal timeout)
          kubectl wait --for=condition=ready pod -l app=chatter --timeout=60s
          
          # Verify deployment
          kubectl get pods -l app=chatter

      - name: Test deployment
        run: |
          # Мінімальне очікування
          sleep 10
          
          # Test the endpoint
          curl -f http://localhost:8080/hello || exit 1
          echo "✅ Deployment successful!"

      - name: Cleanup old images
        run: |
          # Keep only last 5 images
          docker images admin/chatter --format "table {{.Tag}}\t{{.CreatedAt}}" | tail -n +6 | awk '{print $1}' | xargs -r docker rmi admin/chatter: 2>/dev/null || true