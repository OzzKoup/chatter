name: Deploy to Local Minikube

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Check Kubernetes files
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Looking for Kubernetes files:"
          find . -name "*.yaml" -o -name "*.yml" | head -10

      - name: Deploy to Kubernetes
        run: |
          # Перевірити чи існує файл
          if [ ! -f "k8s/deployment.yaml" ]; then
            echo "Error: k8s/deployment.yaml not found"
            echo "Available files:"
            find . -name "*.yaml" -o -name "*.yml"
            exit 1
          fi
          
          # Показати поточний вміст файлу
          echo "Current deployment.yaml:"
          cat k8s/deployment.yaml
          
          # Оновити тег образу
           sed -i "s|image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}|g" .github/workflows/k8s/deployment.yaml
          
          # Показати оновлений файл
          echo "Updated deployment.yaml:"
          cat k8s/deployment.yaml
          
          # Застосувати маніфести
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/chatter-deployment --timeout=300s