name: Deploy to Local Minikube

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Stop existing services
        run: |
          pkill -f "ssh.*serveo.net" || true
          pkill -f "kubectl.*port-forward" || true

      - name: Deploy to Kubernetes
        run: |
          DEPLOYMENT_FILE=".github/workflows/k8s/deployment.yaml"
          sed -i "s|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}|g" "$DEPLOYMENT_FILE"
          kubectl apply -f "$DEPLOYMENT_FILE"
          kubectl rollout status deployment/chatter-deployment --timeout=300s

      - name: Start services
        run: |
          nohup kubectl port-forward service/chatter-service 8083:80 --address 0.0.0.0 > /tmp/port-forward.log 2>&1 &
          sleep 20
          
          if curl -f http://localhost:8083/hello > /dev/null 2>&1; then
            ssh -i ~/.ssh/serveo_key -R 80:localhost:8083 serveo.net > /tmp/serveo.log 2>&1 &
            sleep 15
          
            TUNNEL_URL=$(grep -o 'https://[^[:space:]]*serveo\.net' /tmp/serveo.log | head -1)
            if [ ! -z "$TUNNEL_URL" ]; then
              echo "Deployment complete! New URL: ${TUNNEL_URL}/hello"
          
              curl -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/comments \
                -d "{\"body\":\"Deployment complete! Access at: ${TUNNEL_URL}/hello\"}"
            else
              echo "Deployment complete! Check logs for URL"
            fi
          else
            echo "Local service failed"
            exit 1
          fi