name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main  # Trigger the workflow when there is a push to the 'main' branch

env:
  AWS_REGION: eu-central-1                    # The AWS region you're using
  ECR_REPOSITORY: 084375578923.dkr.ecr.eu-central-1.amazonaws.com/chatter   # Your ECR repository URL
  ECS_SERVICE: chatter                         # Your ECS service name
  ECS_CLUSTER: MY_ECS_CLUSTER                  # Your ECS cluster name
  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION  # ECS task definition file path (e.g., .aws/task-definition.json)
  CONTAINER_NAME: chatter                      # The container name used in the ECS task definition

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Java with Maven
        uses: actions/setup-java@v3
        with:
          java-version: '21'  # Specify the Java version you're using
          distribution: 'adoptopenjdk'  # Use the OpenJDK distribution

      - name: Clean and build Java project
        run: |
          mvn clean package  # Clean and build your Maven project, this will create the target directory with the .jar file

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build the Docker image after the Maven build process
          docker build -t $ECR_REGISTRY/chatter:${IMAGE_TAG} .
          docker push $ECR_REGISTRY/chatter:${IMAGE_TAG}

      - name: Update ECS task definition with new image
        id: update-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy new ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true